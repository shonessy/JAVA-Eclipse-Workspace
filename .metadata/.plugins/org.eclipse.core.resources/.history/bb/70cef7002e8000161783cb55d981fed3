
public class TestBubbleSort {

	public static void main(String[] args) {
		ArrayWithBubbleSort aBubble = new ArrayWithBubbleSort(50);
		for(int i=0; i<15; i++)
			aBubble.insert((int)(Math.random()*100));
		System.out.println("Niz: ");
		System.out.println(aBubble);
		System.out.println("Sortirani niz: ");
		//aBubble.bubbleSort();
		//aBubble.selectionSort();
		aBubble.insertionSort();
		System.out.println(aBubble);
		System.out.println("-------------------------------------");
		
		int size=100;
		ArrayWithBubbleSort testArray=new ArrayWithBubbleSort(size);
		ArrayWithBubbleSort testBubleSort=new ArrayWithBubbleSort(size);
		ArrayWithBubbleSort testSelectionSort=new ArrayWithBubbleSort(size);
		ArrayWithBubbleSort testInsertionSort=new ArrayWithBubbleSort(size);
		
		for(int i=0; i<size; i++)
			testArray.insert( (int) (Math.random()*(size-1)) );
		testBubleSort.copyArray(testArray);
		testSelectionSort.copyArray(testArray);
		testInsertionSort.copyArray(testArray);
		
		long start=System.nanoTime();
		testBubleSort.bubbleSort();
		long finish=System.nanoTime();
		System.out.println("Bubble Sort: " + (finish-start)/1_000_000 + "[ms] ");
		//System.out.println("\t " + testBubleSort);
		
		start=System.nanoTime();
		testSelectionSort.selectionSort();
		finish=System.nanoTime();
		System.out.println("Selection Sort: " + (finish-start)/1_000_000 + "[ms] ");
		//System.out.println("\t " + testSelectionSort);
		
		start=System.nanoTime();
		testInsertionSort.insertionSort();
		finish=System.nanoTime();
		System.out.println("Insection Sort: " + (finish-start)/1_000_000 + "[ms] ");
		//System.out.println("\t " + testInsertionSort);
		
		System.out.println("testBubleSort==testSelectionSort: " + 
							testBubleSort.areEqual(testSelectionSort) );
		System.out.println("testSelectionSort==testInsertionSort: " + 
				testSelectionSort.areEqual(testInsertionSort) );
		System.out.println("testBubleSort==testInsertionSort: " + 
				testBubleSort.areEqual(testInsertionSort) );

	}

}
