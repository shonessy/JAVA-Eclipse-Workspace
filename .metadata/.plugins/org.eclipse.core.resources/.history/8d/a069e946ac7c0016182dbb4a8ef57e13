import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;

public class Thread4Client /*implements Runnable*/ {
	
	//private Thread t=null;
	private Runnable recivingThread=null;
	private Runnable sendingThread= null;
			
	private Socket clientSocket = null;
	private static int numClients=0;
	private int clientID;
	private boolean isRunning;
	
	//cobnsturctor
	public Thread4Client(Socket socket){
		clientSocket=socket;
		clientID=++numClients;
		isRunning=true;
		System.out.println("Connected - ClientSocket: " + socket);
		//t=new Thread(this);
		
		recivingThread = new Runnable() {			
			@Override
			public void run() {
				 try{
					 BufferedReader br = new BufferedReader(
							new InputStreamReader(
								clientSocket.getInputStream()));
					// PrintWriter pw = new PrintWriter(clientSocket.getOutputStream(), true);
					 String recived="";
					 while( isRunning ){
					 	System.out.println("Client_" + clientID + ": " + (recived=br.readLine()));
					 	//System.out.print("Server-> ");
					 	//pw.println(54);
					 	if(recived.equals("ende"))
					 		isRunning=false;
					 	Thread.sleep(100);
					 }
				 	System.out.println("*****************************\n");
				 	}catch(IOException e){
				 		System.out.println("Error: Can't open Socket or BufferdReader for Client: ");
				 		e.printStackTrace();
				 	}catch(InterruptedException e){
				 		System.out.println("Error: Can't sleep Reciving Thread");
				 	}
			}
		};
		
		sendingThread = new Runnable() {		
			@Override
			public void run() {
				try{
					PrintWriter pw = new PrintWriter(clientSocket.getOutputStream(), true);
					while(isRunning){
						System.out.print("Server-> ");
					 	pw.println(54);
					 	Thread.sleep(50);
					}
				}catch(IOException e){
					System.out.println("Error: Can't create PrintWriter");
				}catch(InterruptedException e){
			 		System.out.println("Error: Can't sleep Sending Thread");
			 	}
				
				
			}
		};
	}
	
	//startClient
	public void startClient(){
		//t.start();
		new Thread(recivingThread).start();
	}
	
	//run
	/*public void run(){
		 try{
			 BufferedReader br = new BufferedReader(
					new InputStreamReader(
						clientSocket.getInputStream()));
			 PrintWriter pw = new PrintWriter(clientSocket.getOutputStream(), true);
			 String recived="";
			 while( ! (recived=br.readLine()).equals("ende") ){
			 	System.out.println("Client_" + clientID + ": " + recived);
			 	System.out.print("Server-> ");
			 	pw.println(54);
			 	
			 }
		 	System.out.println("*****************************\n");
		 	}catch(IOException e){
		 		System.out.println("Error: Can't open Socket for Client: " + clientSocket);
		 	}
		}*/
}
